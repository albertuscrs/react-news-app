{"version":3,"sources":["components/Button/index.js","components/Table/index.js","components/Search/index.js","constant/index.js","components/App/index.js","serviceWorker.js","components/Javascript/index.js","components/Python/index.js","index.js"],"names":["Button","onClick","children","className","defaulProps","Loading","Sort","sortKey","onSort","activeSortKey","sortClass","push","join","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Table","props","state","isSortReverse","bind","this","setState","removeItem","sortedList","reverseSortedList","map","item","key","objectID","href","url","target","rel","title","author","num_comments","points","type","Component","Search","input","focus","onChange","value","onSubmit","FormGroup","style","fontWeight","border","width","ref","node","DEFAULT_QUERY","PATH_BASE","App","results","searchKey","searchTerm","isLoading","searchValue","fetchTopStories","setTopStories","result","hits","page","prevState","oldHits","updatedHits","updateTopStories","fetch","then","response","json","catch","e","event","checkTopStoriesSearchTerm","preventDefault","id","updatedList","filter","console","log","Container","Row","ButtonWithLoading","rest","Boolean","window","location","hostname","match","Javascript","withLoading","Python","ReactDOM","render","basename","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec959609.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClick, children, className='' }) =>\n    <button\n      className={ className }\n      onClick={ onClick }>\n      { children }\n    </button>\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n}\n\nButton.defaulProps = {\n  className: ''\n}\n\nexport const Loading = () =>\n  <div className='col-md-6 offset-md-3'>\n    <h3>Loading...</h3>\n  </div>\n\nexport const Sort = ({ sortKey, onSort, children, className, activeSortKey }) =>\n {\n   const sortClass = ['btn btn-outline-dark'];\n\n   if(sortKey === activeSortKey){\n     sortClass.push('btn btn-warning');\n   }\n  return(\n    <Button\n      className={ sortClass.join(' ') }\n      onClick={ () => onSort(sortKey) }\n      activeSortKey={ sortKey }\n      >\n      { children }\n    </Button>\n  )\n }","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { sortBy } from 'lodash';\nimport { Button, Sort } from '../Button/index';\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, 'title'),\n  AUTHOR: list => sortBy(list, 'author'),\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\n  POINTS: list => sortBy(list, 'points').reverse()\n}\n\nclass Table extends Component{\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      sortKey: 'NONE',\n      isSortReverse: false\n    }\n    this.onSort = this.onSort.bind(this);\n  }\n\n  // sort function\n  onSort(sortKey){\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\n    this.setState({ sortKey, isSortReverse });\n  }\n\n  render(){\n    const { list, removeItem } = this.props;\n    const { sortKey, isSortReverse } = this.state;\n    const sortedList = SORTS[sortKey](list);\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\n\n    return(\n      <div>\n        <div className=\"mt-3 mb-5 \">\n          <Sort\n            className=\"btn btn-xs btn-outline-dark sortBtn\"\n            sortKey={ 'NONE' }\n            onSort= { this.onSort }\n            activeSortKey={ sortKey }\n          >Default</Sort>\n          <Sort\n            className=\"btn btn-xs btn-outline-dark sortBtn\"\n            sortKey={ 'TITLE' }\n            onSort= { this.onSort }\n            activeSortKey={ sortKey }\n          >Title</Sort>\n          <Sort\n            className=\"btn btn-xs btn-outline-dark sortBtn\"\n            sortKey={ 'AUTHOR' }\n            onSort= { this.onSort }\n            activeSortKey={ sortKey }\n          >Author</Sort>\n          <Sort\n            className=\"btn btn-xs btn-outline-dark sortBtn\"\n            sortKey={ 'COMMENTS' }\n            onSort= { this.onSort }\n            activeSortKey={ sortKey }\n            >Comments</Sort>\n          <Sort\n            className=\"btn btn-xs btn-outline-dark sortBtn\"\n            sortKey={ 'POINTS' }\n            onSort= { this.onSort }\n            activeSortKey={ sortKey }\n            >Points</Sort>\n        </div>\n        {\n          // list.filter( isSearched(searchTerm) ).map(item =>\n          reverseSortedList.map(item =>\n            <div key={ item.objectID }>\n                <h3>  <a href = { item.url } target='_blank' rel=\"noopener noreferrer\">{ item.title }</a></h3>\n                <h4> { item.author } | { item.num_comments } Comments | { item.points } Points \n                  <Button\n                    className=\"btn btn-secondary btn-sm\"\n                    type=\"button\"\n                    onClick={ () => removeItem(item.objectID) }\n                  >\n                    Remove me\n                  </Button>\n                </h4> <hr />\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nTable.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      objectID: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      url: PropTypes.string,\n      num_comments: PropTypes.number,\n      points: PropTypes.number\n    })\n  ).isRequired,\n  removeItem: PropTypes.func.isRequired\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport { FormGroup } from 'react-bootstrap';\nimport { Button } from '../Button/index';\n\nclass Search extends Component {\n  componentDidMount(){\n    this.input.focus();\n  }\n  render(){\n    const { onChange, value, children, onSubmit } = this.props;\n    return(\n      <form onSubmit={ onSubmit }>\n        <FormGroup>\n        <h3 style={{ fontWeight: 'bold' }}>{ children }</h3> <hr style={{ border: '2px solid black', width: '100px' }} />\n          <div className=\"input-group\">\n            <input \n              className=\"form-control full-width searchForm\"\n              type=\"text\"\n              onChange={ onChange }\n              value={ value }\n              ref={ (node) => { this.input = node }}\n              />\n            <span className=\"input-group-btn\">\n              <Button\n                className=\"btn btn-primary searchBtn\"\n                type=\"submit\"\n              >\n                Search\n              </Button>\n            </span>\n          </div>\n        </FormGroup>\n      </form>\n    )\n  }\n}\n\nexport default Search;","export const DEFAULT_QUERY = 'react';\nexport const DEFAULT_PAGE = 0;\nexport const DEFAULT_HPP = 10;\n\nexport const PATH_BASE = 'https://hn.algolia.com/api/v1';\nexport const PATH_SEARCH = '/search';\nexport const PARAM_SEARCH = 'query=';\nexport const PARAM_PAGE = 'page=';\nexport const PARAM_HPP = 'hitsPerPage=';","import React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Table from '../Table/index';\nimport { Button, Loading } from '../Button/index';\nimport Search from '../Search/index';\nimport {\n  DEFAULT_QUERY,\n  DEFAULT_PAGE,\n  DEFAULT_HPP,\n  PATH_BASE,\n  PATH_SEARCH,\n  PARAM_SEARCH,\n  PARAM_PAGE,\n  PARAM_HPP\n} from '../../constant/index';\n\n// const url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\n// console.log(url);\n\n// function isSearched(searchTerm){\n//   return function(item){\n//     return !searchTerm || item.title.toLowerCase().includes(searchTerm.toLowerCase()) || item.author.toLowerCase().includes(searchTerm.toLowerCase());\n//   }\n// }\n\nconst withLoading = (Component) => ({ isLoading, ...rest}) =>\n  isLoading ? <Loading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => prevState => {\n  const { searchKey, results } = prevState;\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n  const updatedHits = [...oldHits, ...hits];\n  return { results: { ...results, [searchKey]: { hits: updatedHits, page } },\n    isLoading: false\n  }\n}\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      isLoading: false,\n    }\n\n    this.removeItem = this.removeItem.bind(this);\n    this.searchValue = this.searchValue.bind(this);\n    this.fetchTopStories = this.fetchTopStories.bind(this);\n    this.setTopStories = this.setTopStories.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.results[searchTerm];\n  }\n\n  setTopStories(result){\n    const { hits, page } = result;\n\n    this.setState(updateTopStories(hits, page));\n  }\n\n  fetchTopStories(searchTerm, page){\n\n    this.setState({ isLoading: true });\n\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(response => response.json())\n      .then(result => this.setTopStories(result))\n      .catch(e => e);\n  }\n\n  componentDidMount(){\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\n  }\n\n  onSubmit(event){\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if(this.checkTopStoriesSearchTerm(searchTerm)){\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\n    }\n\n    event.preventDefault();\n  }\n\n  removeItem(id){\n    const { results, searchKey } = this.state;\n    const { hits } = results[searchKey];\n    const updatedList = hits.filter(item => item.objectID !== id);\n    this.setState({results: {...results, [searchKey]: {hits: updatedList}}});\n  }\n\n  searchValue(event){\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  render(){\n    const { results, searchTerm, searchKey, isLoading } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    console.log(this);\n    return (\n      <div className='col-sm-10 offset-1'>\n        <Container>\n          <Row>\n            <div className=\"jumbotron col-sm-6 offset-md-3\">\n              <Search\n                onChange={ this.searchValue }\n                value={ searchTerm }\n                onSubmit= { this.onSubmit }\n              >News App</Search>\n            </div>\n          </Row>\n        </Container>\n        <Container>\n          <Row>\n            <Table\n              list={ list }\n              removeItem={ this.removeItem }\n              />\n            <div className=\"text-center col-md-6 offset-md-3 alert\">\n              \n                <ButtonWithLoading\n                  isLoading={ isLoading }\n                  className=\"btn btn-dark btn-sm\"\n                  onClick={ () => this.fetchTopStories(searchTerm, page + 1) }\n                  >\n                  Load More\n                </ButtonWithLoading>\n              \n            </div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Table from '../Table/index';\nimport { Button, Loading } from '../Button/index';\nimport Search from '../Search/index';\nimport {\n  DEFAULT_QUERY,\n  DEFAULT_PAGE,\n  DEFAULT_HPP,\n  PATH_BASE,\n  PATH_SEARCH,\n  PARAM_SEARCH,\n  PARAM_PAGE,\n  PARAM_HPP\n} from '../../constant/index';\n\n// const url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\n// console.log(url);\n\n// function isSearched(searchTerm){\n//   return function(item){\n//     return !searchTerm || item.title.toLowerCase().includes(searchTerm.toLowerCase()) || item.author.toLowerCase().includes(searchTerm.toLowerCase());\n//   }\n// }\n\nconst withLoading = (Component) => ({ isLoading, ...rest}) =>\n  isLoading ? <Loading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => prevState => {\n  const { searchKey, results } = prevState;\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n  const updatedHits = [...oldHits, ...hits];\n  return { results: { ...results, [searchKey]: { hits: updatedHits, page } },\n    isLoading: false\n  }\n}\nclass Javascript extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: 'javascript',\n      isLoading: false,\n    }\n\n    this.removeItem = this.removeItem.bind(this);\n    this.searchValue = this.searchValue.bind(this);\n    this.fetchTopStories = this.fetchTopStories.bind(this);\n    this.setTopStories = this.setTopStories.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.results[searchTerm];\n  }\n\n  setTopStories(result){\n    const { hits, page } = result;\n\n    this.setState(updateTopStories(hits, page));\n  }\n\n  fetchTopStories(searchTerm, page){\n\n    this.setState({ isLoading: true });\n\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(response => response.json())\n      .then(result => this.setTopStories(result))\n      .catch(e => e);\n  }\n\n  componentDidMount(){\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\n  }\n\n  onSubmit(event){\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if(this.checkTopStoriesSearchTerm(searchTerm)){\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\n    }\n\n    event.preventDefault();\n  }\n\n  removeItem(id){\n    const { results, searchKey } = this.state;\n    const { hits } = results[searchKey];\n    const updatedList = hits.filter(item => item.objectID !== id);\n    this.setState({results: {...results, [searchKey]: {hits: updatedList}}});\n  }\n\n  searchValue(event){\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  render(){\n    const { results, searchTerm, searchKey, isLoading } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    console.log(this);\n    return (\n      <div className='col-sm-10 offset-1'>\n        <Container>\n          <Row>\n            <Table\n              list={ list }\n              removeItem={ this.removeItem }\n              />\n            <div className=\"text-center col-md-6 offset-md-3 alert\">\n              \n                <ButtonWithLoading\n                  isLoading={ isLoading }\n                  className=\"btn btn-dark btn-sm\"\n                  onClick={ () => this.fetchTopStories(searchTerm, page + 1) }\n                  >\n                  Load More\n                </ButtonWithLoading>\n              \n            </div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default Javascript;\n","import React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Table from '../Table/index';\nimport { Button, Loading } from '../Button/index';\nimport Search from '../Search/index';\nimport {\n  DEFAULT_QUERY,\n  DEFAULT_PAGE,\n  DEFAULT_HPP,\n  PATH_BASE,\n  PATH_SEARCH,\n  PARAM_SEARCH,\n  PARAM_PAGE,\n  PARAM_HPP\n} from '../../constant/index';\n\n// const url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\n// console.log(url);\n\n// function isSearched(searchTerm){\n//   return function(item){\n//     return !searchTerm || item.title.toLowerCase().includes(searchTerm.toLowerCase()) || item.author.toLowerCase().includes(searchTerm.toLowerCase());\n//   }\n// }\n\nconst withLoading = (Component) => ({ isLoading, ...rest}) =>\n  isLoading ? <Loading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => prevState => {\n  const { searchKey, results } = prevState;\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n  const updatedHits = [...oldHits, ...hits];\n  return { results: { ...results, [searchKey]: { hits: updatedHits, page } },\n    isLoading: false\n  }\n}\nclass Python extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: 'python',\n      isLoading: false,\n    }\n\n    this.removeItem = this.removeItem.bind(this);\n    this.searchValue = this.searchValue.bind(this);\n    this.fetchTopStories = this.fetchTopStories.bind(this);\n    this.setTopStories = this.setTopStories.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.results[searchTerm];\n  }\n\n  setTopStories(result){\n    const { hits, page } = result;\n\n    this.setState(updateTopStories(hits, page));\n  }\n\n  fetchTopStories(searchTerm, page){\n\n    this.setState({ isLoading: true });\n\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(response => response.json())\n      .then(result => this.setTopStories(result))\n      .catch(e => e);\n  }\n\n  componentDidMount(){\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\n  }\n\n  onSubmit(event){\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if(this.checkTopStoriesSearchTerm(searchTerm)){\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\n    }\n\n    event.preventDefault();\n  }\n\n  removeItem(id){\n    const { results, searchKey } = this.state;\n    const { hits } = results[searchKey];\n    const updatedList = hits.filter(item => item.objectID !== id);\n    this.setState({results: {...results, [searchKey]: {hits: updatedList}}});\n  }\n\n  searchValue(event){\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  render(){\n    const { results, searchTerm, searchKey, isLoading } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    console.log(this);\n    return (\n      <div className='col-sm-10 offset-1'>\n        <Container>\n          <Row>\n            <Table\n              list={ list }\n              removeItem={ this.removeItem }\n              />\n            <div className=\"text-center col-md-6 offset-md-3 alert\">\n              \n                <ButtonWithLoading\n                  isLoading={ isLoading }\n                  className=\"btn btn-dark btn-sm\"\n                  onClick={ () => this.fetchTopStories(searchTerm, page + 1) }\n                  >\n                  Load More\n                </ButtonWithLoading>\n              \n            </div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default Python;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter as Router, Route, Link, NavLink, HashRouter } from 'react-router-dom';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport * as serviceWorker from './serviceWorker';\nimport Javascript from './components/Javascript';\nimport Python from './components/Python';\n\nconst Root = () =>\n<HashRouter basename='/react-news-app'>\n  <div>\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href='/'>NEWSAPP</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n            <Nav.Link href='/' >Home</Nav.Link>\n            <Nav.Link href='/javascript' >Javascript</Nav.Link>\n            <Nav.Link href='/python' >Python</Nav.Link>\n            <Nav.Link href='https://github.com/albertuscrs/react-news-app' >My GitHub</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n\n    <Route exact path='/' component={ App } />\n    <Route exact path='/javascript' component={ Javascript } />\n    <Route exact path='/python' component={ Python } />\n  </div>\n</HashRouter>\n\n// const About = () =>\n// <div>\n//   <h1>This is about page</h1>\n// </div>\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}